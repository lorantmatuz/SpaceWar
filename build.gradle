plugins {
    id 'java-library'
    id 'application'
    id 'com.palantir.git-version' version '0.14.0'
}

group 'hu.elte.inf.szofttech2023.team3'
description = 'Space War game'

ext.mainClass = 'hu.elte.inf.szofttech2023.team3.spacewar.Main'

def scmUrl = 'https://szofttech.inf.elte.hu/szofttech-esti-2023/group-3/csapat3.git'
def websiteUrl = scmUrl.replaceAll(/\.git$/, "");

def automaticVersion = '0.1.0-SNAPSHOT'
def versionMatcher = gitVersion() =~ /^v?(\d+\.\d+\.)(\d+)(.*)$/
if (versionMatcher.size() > 0) {
    def versionMatch = versionMatcher[0]
    def isVersionDirty = !versionMatch[3].isEmpty()
    def versionPrefix = versionMatch[1]
    def versionPatch = isVersionDirty ? (Integer.parseInt(versionMatch[2]) + 1) + "" : versionMatch[2];
    def versionSuffix = isVersionDirty ? "-SNAPSHOT" : ""
    automaticVersion = versionPrefix + versionPatch + versionSuffix
}
version automaticVersion

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    // TODO
    
    implementation 'org.slf4j:slf4j-api:1.7.36'
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.7.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

compileJava.options.release = 17
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withJavadocJar()
    withSourcesJar()
}

application {
    mainClass = project.ext.mainClass
}

javadoc {
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
}

jar {
    manifest {
        attributes('Automatic-Module-Name': project.name)
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'failed'
        showExceptions true
        exceptionFormat 'full'
        showCauses true
        showStackTraces true
        showStandardStreams false
    }
}

defaultTasks 'build'
